/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int s = 0, c = 0;
        struct ListNode *result = NULL;
        struct ListNode *p;
        struct ListNode *l3;
        
        while(l1 || l2)
        {
            s = (l1 ? l1->val : 0) + (l2 ? l2->val : 0) + c;
            c = s/10;
            s = s%10;
            l3 = new ListNode(s);

            if(!result)
            {
                result = l3;
                p = result;
            }
            else
            {
                p->next = l3;
                p = p->next;
            }
            if(l1)
                l1 = l1->next;
            if(l2)
                l2 = l2->next;

        }
        if(c > 0)
        {
            l3 = new ListNode(c);
            p->next = l3;
        }
        return result;
    }
};
