/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
    struct ListNode *p = head, *curr, *prev;
    int count = 0;

     while(p)
    {
        p = p->next;
        count++;
    } 
    cout<<count;
    curr = head;
    if(count ==1)
        return curr->next;
    if(count == 2)
        curr->next = curr->next->next;
           

    for(int i = 1; i < count/2; i++)
        curr = curr->next;
     
    
    if(curr && curr->next && curr->next->next)
        curr->next = curr->next->next;
    return head;
    }
};
